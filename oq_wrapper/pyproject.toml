[build-system]
requires = ["setuptools", "setuptools-scm", "cython"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
fallback_version = "0.1.dev0"

[project]
name = "oq_wrapper"
authors = [{ name = "QuakeCoRE" }]
description = "Package for empirical calculations"
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["version", "dependencies"]

[tool.setuptools.package-dir]
oq_wrapper = "oq_wrapper"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.ruff]
exclude = ["oq_wrapper/scripts/one_offs"]

[tool.ruff.lint]
extend-select = [
  # isort imports
  "I",
  # Use r'\s+' rather than '\s+'
  "W605",
  # All the naming errors, like using camel case for function names.
  "N",
  # Missing docstrings in classes, methods, and functions
  "D101",
  "D102",
  "D103",
  "D105",
  "D107",
  # Use f-string instead of a format call
  "UP032",
  # Standard library import is deprecated
  "UP035",
  # Missing function argument type-annotation
  "ANN001",
  # Using except without specifying an exception type to catch
  "BLE001",
  # Missing function argument type-annotation
  "ANN001",
  "ANN002",
  "ANN003",
  "ANN201",
  "ANN202",
  "ANN204",
  "ANN205",
  "ANN206",
  # Using except without specifying an exception type to catch
  "BLE001",
]
ignore = ["D104"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-first-party = [
  "source_modelling",
  "workflow",
  "pygmt_helper",
  "empirical",
  "nshmdb",
  "IM_calculation",
  "mera",
]

[tool.ruff.lint.per-file-ignores]
# Ignore no docstring in __init__.py
"__init__.py" = ["D104"]
# Ignore docstring errors in tests folder
"tests/**.py" = ["D"]

[tool.numpydoc_validation]
checks = [
    "GL05",
    "GL08",
    "GL10",
    "PR01",
    "PR02",
    "PR03",
    "PR04",
    "PR05",
    "PR06",
    "PR07",
    "RT01",
    "RT02",
    "RT03",
    "RT04",
    "YD01",
]
# remember to use single quotes for regex in TOML
exclude = [ # don't report on objects that match any of these regex
    '\.undocumented_method$',
    '\.__repr__$',
]
